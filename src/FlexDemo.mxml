<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"  
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   skinClass="TDFGradientBackgroundSkin"
			   xmlns:local="*" creationComplete="searchBookApp_creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.IList;
			import mx.collections.errors.ItemPendingError;
			import mx.controls.Alert;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.AsyncResponder;
			import mx.rpc.AsyncToken;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.components.List;
			[Bindable]
			private var search_url:String ="http://localhost:8080/searchBook";
			[Bindable]
			private var detail_url:String = "http://localhost:8080/getBookDetail";
			[Bindable]
			private var max_result:int = 50;
			[Bindable]
			private var total_result:int = 1000;
			[Bindable]
			private var total_extra:int = 500;
			[Bindable]
			private var has_more:Boolean = true;
			[Bindable]
			private var search_title:String = '';
			[Bindable]
			private var search_placeholder:String = "输入关键字..."
			private var detailLoadedFlag:String = "detailLoadedFlag";
			
			
		
			protected function searchBookApp_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
			}
			protected function txt_search_focusInHandler(event:FocusEvent):void
			{
				// TODO Auto-generated method stub 
				txt_search.text="";
			}
			protected function btn_search_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.has_more = true;
				this.pagedList.clearItems();
			}
			
			private function handleCreatePendingItemFunction(index:int, ipe:ItemPendingError):Object {
				return {};
			}
			private function loadItems(list:IList, start:uint, count:uint):void
			{
				if(txt_search.text == '' || txt_search.text == search_placeholder || !this.has_more){
					this.total_result = 1000;
					return;
				}
					
				var asyncToken:AsyncToken = search_request.send({'q':txt_search.text,'start':start+1, 'max':max_result});
				asyncToken.addResponder(new AsyncResponder(function result(event:ResultEvent, token:Object = null):void {
					if(!event.result.hasOwnProperty('feed')){
						Alert.show(event.result.toString(),"错误");
						return;
					}
					search_title = event.result.feed.title;
					var totalResultReturned:int = int(event.result.feed.totalResults);
					if(totalResultReturned == 0){
						has_more = false;
						return;
					}
					total_result = int(event.result.feed.totalResults)+total_extra;
					var v:Vector.<Object> = new Vector.<Object>();
					for each(var entry:Object in event.result.feed.entry){
						var item:Object = {};
						item.id = entry.id;
						item.title = entry.title;
						item.rating = entry.rating.average;
						item.ratingMax = entry.rating.max;
						item.ratingMin = entry.rating.min;
						item.numRaters = entry.rating.numRaters;
						if(entry.attribute is ArrayCollection){
							for each(var attr:Object in entry.attribute){
								item[attr.name] = attr.value;
							}
						}
						for each(var link:Object in entry.link){
							if(link.rel == "image"){
								item.image = link.href;
							}
						}
						if(entry.author is ArrayCollection){
							var author:String = "";
							var i:int = 0;
							for each(var _author:Object in entry.author){
								if(i>2){
									author += "等";
									break;
								}else{
									author += _author.name + "   ";
								}
								i++;
							}
							item.author = author;
						}
						var propertyList:Array = ['id','title','author','rating','price','pubdate','publisher'];
						for each(var property:String in propertyList){
							if(!item[property] ||item[property]==''){
								item[property] = "暂无";
							} 
						}
						v.push(item);
					}
					pagedList.storeItemsAt(v, token as int);
				}, function fault(event:FaultEvent, token:Object = null):void {
					Alert.show(event.fault.toString(),"错误");
					trace(event.fault.faultString);
				}, start));
			}
			
			protected function btn_detail_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var selectedItem:Object = dg_result.selectedItem;
				if(selectedItem.hasOwnProperty(detailLoadedFlag)){
					var detailPopupWindow:DetailWindow = DetailWindow(PopUpManager.createPopUp(this, DetailWindow,true));
					detailPopupWindow.book = selectedItem;
					PopUpManager.centerPopUp(detailPopupWindow);
				}else{
					detail_rquest.send({'id':selectedItem.id});
				} 
			}
			
			protected function detail_rquest_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				var selectedItem:Object = dg_result.selectedItem;
				selectedItem[detailLoadedFlag] = true;
				var entry:Object = event.result.entry;
				selectedItem.summary = entry.summary;
				if(entry.attribute is ArrayCollection){
					for each(var attr:Object in entry.attribute){
						if (attr.name == 'author')continue;
						if(attr.name == 'author-intro'){
							selectedItem['author_intro'] = attr.value;
							continue;
						}
						selectedItem[attr.name] = attr.value;
					}
				}
				selectedItem.tagArr = new ArrayCollection();
				for each(var tag:Object in entry.tag){
					selectedItem.tagArr.addItem({'name':tag.name,'count':tag.count});
				}
				var propertyList:Array = ['pages','author_intro','summary'];
				for each(var property:String in propertyList){
					if(!selectedItem[property] ||selectedItem[property]==''){
						selectedItem[property] = "暂无";
					} 
				}
				var detailPopupWindow:DetailWindow = DetailWindow(PopUpManager.createPopUp(this, DetailWindow,true));
				detailPopupWindow.book = selectedItem;
				PopUpManager.centerPopUp(detailPopupWindow);
			}

			protected function detail_rquest_faultHandler(event:FaultEvent):void
			{
				// TODO Auto-generated method stub
				Alert.show(event.fault.toString(),"错误");
				trace(event.fault.faultString);
			}


			protected function dg_result_itemDoubleClickHandler(event:ListEvent):void
			{
				// TODO Auto-generated method stub
				btn_detail_clickHandler(null);
			}

		]]>
	</fx:Script>
	
	
	<fx:Declarations>
		<s:HTTPService id="search_request" showBusyCursor="true" url="{search_url}"/>
		<s:HTTPService id="detail_rquest" showBusyCursor="true" url="{detail_url}" result="detail_rquest_resultHandler(event)"
					   fault="detail_rquest_faultHandler(event)"/>
		<local:PagedList id="pagedList" pageSize="{max_result}" length="{total_result}" loadItemsFunction="loadItems"/> 
		<s:AsyncListView id="a_list" list="{pagedList}"  createPendingItemFunction="handleCreatePendingItemFunction"/>
		<mx:StringValidator id="vali_search_input" source="{txt_search}" property="text"   
						    required="true"
						    requiredFieldError="{search_placeholder}"
							trigger="{btn_search}" triggerEvent="click"
						    valid="{btn_search_clickHandler(null)}"/>  
	</fx:Declarations>
	<s:layout>
		<s:HorizontalLayout horizontalAlign="center" />
	</s:layout>
	
	<s:Panel id="pan_main" title="豆瓣书籍搜索" color="0x000000" 
			 borderAlpha="0.15" 
			 width="80%" height="100%">
		
		<s:layout>
			<s:VerticalLayout paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10"/>
		</s:layout>
		<s:HGroup width="100%" horizontalAlign="right">
			<s:Label text="{search_title}：{this.total_result - total_extra}" width="100%" textAlign="left" visible="{this.total_result != 1000}"/>
			<s:TextInput id="txt_search" text="{this.search_placeholder}" focusIn="txt_search_focusInHandler(event)"/>
			<s:Button id="btn_search" label="搜索" click="btn_search_clickHandler(event)"/>
		</s:HGroup>
		
		<mx:DataGrid id="dg_result" color="0x323232" width="100%" height="100%" rowCount="3" dataProvider="{a_list}"
					doubleClickEnabled="true" itemDoubleClick="dg_result_itemDoubleClickHandler(event)">
			<mx:columns>
				<mx:DataGridColumn dataField="title" headerText="书名" sortable="false"/>
				<mx:DataGridColumn dataField="author" headerText="作者" sortable="false"/>
				<mx:DataGridColumn dataField="rating" headerText="评分" sortable="false" textAlign="center"/>
				<mx:DataGridColumn dataField="price" headerText="价格" sortable="false"/>
				<mx:DataGridColumn dataField="pubdate" headerText="出版日期" sortable="false"/>
				<mx:DataGridColumn dataField="publisher" headerText="出版社" sortable="false"/>
			</mx:columns>
		</mx:DataGrid>
		
		<s:HGroup verticalAlign="middle" width="100%"  height="100%" visible="{dg_result.selectedItem&amp;&amp;dg_result.selectedItem.hasOwnProperty('id')}"
					  includeInLayout="{dg_result.selectedItem&amp;&amp;dg_result.selectedItem.hasOwnProperty('id')}">
				<s:VGroup horizontalAlign="center" width="15%" paddingRight="0" verticalAlign="top" height="185" y="21">
					<mx:Image height="100" width="70" source="{dg_result.selectedItem.image}"/>
					<s:Label  text="ISBN: {dg_result.selectedItem.isbn13}"/>
					<s:Button id="btn_detail" label="详细" width="50" click="btn_detail_clickHandler(event)"/>
				</s:VGroup>
				<s:VGroup>
					<s:HGroup>
						<mx:Spacer width="18"/>
						<mx:Form id="detail_form" color="0x323232" paddingBottom="0">
							<mx:FormItem label="书名：" paddingTop="0" paddingBottom="0">
								<s:Label text="{dg_result.selectedItem.title}"/>
							</mx:FormItem>
							<mx:FormItem label="作者：" paddingTop="0" paddingBottom="0">
								<s:Label text="{dg_result.selectedItem.author}"/>
							</mx:FormItem>
						</mx:Form>
					</s:HGroup>
					<s:HGroup>
						<mx:Form paddingTop="0">
							<!--mx:FormItem label="评分：" paddingTop="0" paddingBottom="0">
								<s:Label text="{dg_result.selectedItem.rating}({dg_result.selectedItem.numRaters}人评价)"/>
							</mx:FormItem-->
							<mx:FormItem label="价格：" paddingTop="0" paddingBottom="0">
								<s:Label text="{dg_result.selectedItem.price}"/>
							</mx:FormItem>
							<mx:FormItem label="出版日期：" paddingTop="0" paddingBottom="0">
								<s:Label text="{dg_result.selectedItem.pubdate}"/>
							</mx:FormItem>
							<mx:FormItem label="出版社：" paddingTop="0" paddingBottom="0">
								<s:Label text="{dg_result.selectedItem.publisher}"/>
							</mx:FormItem>
						</mx:Form>		
						<mx:Panel title="评分：{dg_result.selectedItem.rating}({dg_result.selectedItem.numRaters}人评价)">
							<mx:BarChart id="bar" height="113" width="100%" color="0x323232"
										 showDataTips="true" dataProvider="{new ArrayCollection( [
										 { Rating: '最高评分', Value:dg_result.selectedItem.ratingMax },
										 { Rating: '均评分', Value:dg_result.selectedItem.rating },
										 { Rating: '最低评分', Value:dg_result.selectedItem.ratingMin }
										 ])}" >
								<mx:verticalAxis>
									<mx:CategoryAxis categoryField="Rating"/>
								</mx:verticalAxis>
								<mx:series>
									<mx:BarSeries yField="Rating" xField="Value" />
								</mx:series>
							</mx:BarChart>
						</mx:Panel>
					</s:HGroup>
				</s:VGroup>
		</s:HGroup>
	</s:Panel>
</s:Application>